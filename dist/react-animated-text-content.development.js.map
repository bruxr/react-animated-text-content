{"version":3,"file":"react-animated-text-content.development.js","sources":["../src/constants.ts","../src/styles/AnimatedFragment.styled.ts","../src/index.tsx"],"sourcesContent":["import { AnimationShapeType, AnimationType } from './types';\n\nexport const PREDEFINED_ANIMATIONS: Record<AnimationType, AnimationShapeType> =\n  {\n    blocks: {\n      y: '-40px',\n    },\n    wave: {\n      y: '40px',\n    },\n    float: { x: '200px', y: '0' },\n    bounce: { y: '200px', ease: 'cubic-bezier(0.68, -0.55, 0.265, 1.55)' },\n    throw: {\n      y: '200px',\n      scale: 4,\n    },\n    diagonal: {\n      x: '200px',\n      y: '-200px',\n      ease: 'cubic-bezier(0.68, -4.55, 0.265, 1.55)',\n      duration: 0.6,\n    },\n  };\n\nexport const WHITE_SPACE_CODE = '&nbsp;';\nexport const DEFAULT_INTERVAL = 0.04;\nexport const DEFAULT_TYPE = 'words';\nexport const DEFAULT_ANIMATION = {\n  y: '-30px',\n};\nexport const DEFAULT_ANIMATION_TYPE = null;\nexport const DEFAULT_TAG = 'div';\nexport const DEFAULT_INTESECTION_OBSERVER_ROOT_MARGIN = '200px';\nexport const DEFAULT_THRESHOLD = 0;\n","import styled, { css } from 'styled-components';\n\nimport { AnimationShapeType } from '../types';\n\nexport const AnimatedFragment = styled.div<{\n  count?: number;\n  interval?: number;\n}>`\n  position: relative;\n  display: inline-block;\n  visibility: hidden;\n`;\n\nexport const StyledWrapper = styled.div<{\n  uid: string;\n  count: number;\n  interval: number;\n  shouldAnimate: boolean;\n  animation: AnimationShapeType;\n}>`\n  @keyframes fragmentletter-${({ uid }) => uid} {\n    0% {\n      opacity: 0;\n      visibility: hidden;\n      transform: translateX(${({ animation: { x } }) => x ?? 0})\n        translateY(${({ animation: { y } }) => y ?? 0})\n        scale(${({ animation: { scale } }) => scale ?? 1});\n    }\n    100% {\n      oapcity: 1;\n      visibility: visible;\n      transform: translateY(0) translateX(0) scale(1);\n    }\n  }\n\n  font-size: 2rem;\n  margin-bottom: 1000px;\n  margin-top: 200px;\n\n  & > span {\n    display: inline-block;\n  }\n\n  & ${AnimatedFragment} {\n    animation: ${({ animation: { duration, ease } }) =>\n      `${duration ?? 0.4}s ${ease ?? 'ease-in-out'} forwards;`};\n\n    animation-name: ${({ shouldAnimate, uid }) =>\n      shouldAnimate ? `fragmentletter-${uid}` : ''};\n  }\n\n  ${({ count = 0, interval }) => {\n    let styles = '';\n\n    for (let i = 0; i < count; i += 1) {\n      styles += `${AnimatedFragment}:nth-of-type(${i + 1}) {\n            animation-delay: ${interval * i}s;\n          }`;\n    }\n\n    return css`\n      ${styles}\n    `;\n  }}\n`;\n","import React, {\n  useEffect,\n  useState,\n  useRef,\n  FC,\n  ReactText,\n  ReactNode,\n  ElementType,\n} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  DEFAULT_ANIMATION,\n  DEFAULT_INTERVAL,\n  DEFAULT_INTESECTION_OBSERVER_ROOT_MARGIN,\n  DEFAULT_TAG,\n  DEFAULT_THRESHOLD,\n  DEFAULT_TYPE,\n  PREDEFINED_ANIMATIONS,\n  WHITE_SPACE_CODE,\n} from './constants';\nimport {\n  AnimatedFragment,\n  StyledWrapper,\n} from './styles/AnimatedFragment.styled';\nimport { AnimationShapeType, AnimationType } from './types';\n\ninterface Props {\n  type?: 'chars' | 'words';\n  children?: ReactText;\n  interval?: number;\n  animation?: AnimationShapeType;\n  animationType?: AnimationType;\n  tag?: ElementType;\n  className: string;\n}\n\nconst renderWords = (arrayToRender: string[]): ReactNode =>\n  arrayToRender.map((fragment, index) => (\n    <AnimatedFragment\n      key={index}\n      dangerouslySetInnerHTML={{ __html: fragment }}\n    />\n  ));\n\nconst renderChars = (arrayToRender: string[], interval: number): ReactNode => {\n  let fullIndex = -1;\n\n  return arrayToRender.map((fragment, index) => {\n    const chars =\n      fragment !== WHITE_SPACE_CODE ? Array.from(fragment) : [WHITE_SPACE_CODE];\n\n    return (\n      <span key={index}>\n        {chars.map((char, charIndex) => {\n          fullIndex += 1;\n          return (\n            <AnimatedFragment\n              key={charIndex}\n              dangerouslySetInnerHTML={{ __html: char }}\n              style={{ animationDelay: `${interval * fullIndex}s` }}\n            />\n          );\n        })}\n      </span>\n    );\n  });\n};\n\nconst AnimatedText: FC<Props> = ({\n  children = '',\n  interval = DEFAULT_INTERVAL,\n  type = DEFAULT_TYPE,\n  animation = DEFAULT_ANIMATION,\n  animationType = DEFAULT_TYPE,\n  tag = DEFAULT_TAG,\n  ...props\n}) => {\n  const [arrayToRender, setArrayToRender] = useState<string[]>([]);\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  const wrapperRef = useRef(null);\n\n  const animationOptions = PREDEFINED_ANIMATIONS?.[animationType] ?? animation;\n\n  useEffect(() => {\n    if (typeof children !== 'string' && typeof children !== 'number') {\n      console.error(\n        \"Only string (ReactText) is currently allowed as AnimatedText component's child. Please, change to proper type.\"\n      );\n      return;\n    }\n\n    const splittedChildren: string[] = children.toString().split(' ');\n\n    const mappedChildren = ([] as string[])\n      .concat(\n        ...splittedChildren.map((word, index) =>\n          index !== splittedChildren.length - 1\n            ? [word, WHITE_SPACE_CODE]\n            : [word]\n        )\n      )\n      .map((word) => (word === ' ' ? WHITE_SPACE_CODE : word));\n\n    setArrayToRender(mappedChildren);\n\n    const observer = new IntersectionObserver(\n      (entries, observer) => {\n        entries.forEach((entry) => {\n          if (!entry.isIntersecting) return;\n\n          setShouldAnimate(true);\n          if (wrapperRef.current) observer.unobserve(wrapperRef.current);\n        });\n      },\n      {\n        rootMargin: DEFAULT_INTESECTION_OBSERVER_ROOT_MARGIN,\n        threshold: DEFAULT_THRESHOLD,\n      }\n    );\n\n    if (wrapperRef.current) observer.observe(wrapperRef.current);\n\n    return () => {\n      setArrayToRender([]);\n      setShouldAnimate(false);\n    };\n  }, [children, type]);\n\n  const uid = uuidv4();\n\n  return (\n    <StyledWrapper\n      as={tag}\n      count={type === 'words' ? arrayToRender.length : 0}\n      interval={interval}\n      ref={wrapperRef}\n      shouldAnimate={shouldAnimate}\n      uid={uid}\n      animation={animationOptions}\n      {...props}\n    >\n      {type === 'words'\n        ? renderWords(arrayToRender)\n        : renderChars(arrayToRender, interval)}\n    </StyledWrapper>\n  );\n};\n\nexport default AnimatedText;\n"],"names":["styled","css","React","useState","useRef","useEffect","uuidv4"],"mappings":"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"}